$date
	Mon Aug 02 19:58:34 2021
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module serial_adder_tb $end
$var wire 8 ! Sum [7:0] $end
$var wire 1 " Cout $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$var reg 1 % Cin $end
$var reg 1 & clock $end
$var reg 1 ' load $end
$scope module SA $end
$var wire 1 % Cin1 $end
$var wire 1 " Cout $end
$var wire 8 ( DA [7:0] $end
$var wire 8 ) DB [7:0] $end
$var wire 1 * S $end
$var wire 1 & clock $end
$var wire 1 ' load $end
$var wire 1 + w1 $end
$var wire 1 , w2 $end
$var wire 1 - w3 $end
$var reg 8 . A [7:0] $end
$var reg 8 / B [7:0] $end
$var reg 1 0 Cin $end
$var reg 8 1 Sum [7:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 1
x0
bx /
bx .
x-
x,
x+
x*
bx )
bx (
x'
x&
x%
bx $
bx #
x"
bx !
$end
#500
1*
0"
1+
0-
0,
00
b1111 /
b1010 .
1'
0%
b1111 $
b1111 )
b1010 #
b1010 (
#1000
0*
1"
0+
1-
b1xxxxxxx !
b1xxxxxxx 1
b10000111 /
b101 .
1&
0'
#1500
0&
#2000
1,
1"
1+
0-
0*
b1xxxxxx !
b1xxxxxx 1
10
b11000011 /
b10000010 .
1&
#2500
0&
#3000
0,
1*
0+
1-
b1xxxxx !
b1xxxxx 1
b11100001 /
b1000001 .
1&
#3500
0&
#4000
0"
0-
b1001xxxx !
b1001xxxx 1
b11110000 /
b10100000 .
1&
#4500
0&
#5000
0*
b11001xxx !
b11001xxx 1
00
b1111000 /
b1010000 .
1&
#5500
0&
#6000
b11001xx !
b11001xx 1
b111100 /
b101000 .
1&
#6500
0&
#7000
b11001x !
b11001x 1
b11110 /
b10100 .
1&
#7500
0&
#8000
1*
1+
b11001 !
b11001 1
b1111 /
b1010 .
1&
#8500
0&
#9000
0*
1"
0+
1-
b10001100 !
b10001100 1
b10000111 /
b101 .
1&
